name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc
            asset_name: pow-client.exe
            binary_path: target/x86_64-pc-windows-msvc/release/pow-client.exe

          - os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            asset_name: pow-client-linux-x86_64
            binary_path: target/x86_64-unknown-linux-gnu/release/pow-client

          - os: ubuntu-latest
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            asset_name: pow-client-linux-arm64
            binary_path: target/aarch64-unknown-linux-gnu/release/pow-client

          - os: ubuntu-latest
            arch: aarch64-android
            target: aarch64-linux-android
            asset_name: pow-client-termux-arm64
            binary_path: target/aarch64-linux-android/release/pow-client

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          components: rustfmt, clippy

      - name: Install cross-compilation dependencies (ARM64)
        if: matrix.arch == 'aarch64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu libc6-dev-arm64-cross

      - name: Install Android NDK (Termux)
        if: matrix.arch == 'aarch64-android'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build
          wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip android-ndk-r25c-linux.zip
          echo "ANDROID_NDK_HOME=$PWD/android-ndk-r25c" >> $GITHUB_ENV
          echo "PATH=$PATH:$PWD/android-ndk-r25c" >> $GITHUB_ENV

      - name: Setup Android target (Termux)
        if: matrix.arch == 'aarch64-android'
        run: |
          rustup target add aarch64-linux-android
          echo '[target.aarch64-linux-android]' >> ~/.cargo/config
          echo 'linker = "aarch64-linux-android28-clang"' >> ~/.cargo/config
          echo 'ar = "llvm-ar"' >> ~/.cargo/config

      - name: Build Release
        run: |
          if [ "${{ matrix.arch }}" = "aarch64" ]; then
            env CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc cargo build --release --target ${{ matrix.target }}
          elif [ "${{ matrix.arch }}" = "aarch64-android" ]; then
            env PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH \
                CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=aarch64-linux-android28-clang \
                CC=aarch64-linux-android28-clang \
                cargo build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pow-client-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ matrix.binary_path }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.binary_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
